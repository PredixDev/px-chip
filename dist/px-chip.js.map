{"version":3,"sources":["px-chip.es6.js"],"names":["Polymer","is","properties","content","type","String","showIcon","Boolean","value","icon","selected","notify","notSelectable","_el","HTMLElement","listeners","attached","setAttribute","_handleTapped","e","stopPropagation","fire"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,SAFE,CAINC,WAAY,CACV;;;;QAKAC,QAAS,CACPC,KAAMC,MADC,CANC,CASV;;;;QAKAC,SAAU,CACRF,KAAMG,OADE,CAERC,MAAO,KAFC,CAdA,CAkBV;;;;;;QAOAC,KAAM,CACJL,KAAMC,MADF,CAEJG,MAAO,cAFH,CAzBI,CA6BV;;;;QAKAE,SAAU,CACRN,KAAMG,OADE,CAERI,OAAQ,IAFA,CAGRH,MAAO,KAHC,CAlCA,CAuCV;;;;;QAMAI,iBAAkB,CAChBR,KAAMG,OADU,CAEhBC,MAAO,KAFS,CA7CR,CAiDV;;;;QAKAK,IAAK,CACHT,KAAMU,WADH,CAtDK,CAJN,CA8DNC,UAAW,CACT,MAAO,eADE,CA9DL,CAiENC,QAjEM,oBAiEK,CACT,KAAKC,YAAL,CAAkB,UAAlB,CAA8B,GAA9B,EACA,KAAKJ,GAAL,CAAW,IACZ,CApEK,CAqENK,aArEM,wBAqEQC,CArER,CAqEW,CACfA,EAAEC,eAAF,GACA,GAAI,CAAC,KAAKR,gBAAV,CAA4B,CAC1B,KAAKF,QAAL,CAAgB,CAAC,KAAKA,QACvB,CACD;;;;;;;SAQA,KAAKW,IAAL,CAAU,gBAAV,CAA4B,CAAC,UAAU,KAAKlB,OAAhB,CAAyB,WAAW,KAAKO,QAAzC,CAA5B,CACD,CAnFK,CAAR,CAqFD,CAtFD","file":"px-chip.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-chip',\n\n    properties: {\n      /**\n      * The text to display in the chip.\n      *\n      * @property content\n      */\n      content: {\n        type: String\n      },\n      /**\n      * Set to true to show an icon in the chip, i.e. to create an Actionable Chip.\n      *\n      * @property selected\n      */\n      showIcon: {\n        type: Boolean,\n        value: false\n      },\n      /**\n      * An svg icon from px-icon-set that will be displayed to the right of the\n      * text content (if `showIcon` is set to true).\n      * If nothing is specified for `icon`, the icon will default to an X (px-utl:close).\n      *\n      * @property icon\n      */\n      icon: {\n        type: String,\n        value: 'px-utl:close'\n      },\n      /**\n      * Set to true to select this chip. This property can be used with a Static Chip.\n      *\n      * @property selected\n      */\n      selected: {\n        type: Boolean,\n        notify: true,\n        value: false\n      },\n      /**\n      * Set this property to true when `showIcon` is true. The chip should not\n      * be selectable when an icon is showing (i.e. if it is an Actionable Chip).\n      *\n      * @property notSelectable\n      */\n      notSelectable: {\n        type: Boolean,\n        value: false\n      },\n      /**\n      * A reference to this HTML element. Used by iron-a11y-keys.\n      *\n      * @property _el\n      */\n      _el: {\n        type: HTMLElement\n      }\n    },\n    listeners: {\n      'tap': '_handleTapped'\n    },\n    attached() {\n      this.setAttribute(\"tabindex\", \"0\");\n      this._el = this;\n    },\n    _handleTapped(e) {\n      e.stopPropagation();\n      if (!this.notSelectable) {\n        this.selected = !this.selected;\n      }\n      /**\n       * Event fired when a px-chip is tapped. Use this event to handle toggling\n       * (in the case of a selectable chip), or for taking an action (in the case of an actionable chip).\n       * The `evt.detail` object will contain current values for certain properties, e.g.\n       *\n       *      {\"content\":\"Some text\", \"selected\":false}\n       * @event px-chip-tapped\n       */\n      this.fire('px-chip-tapped', {\"content\":this.content, \"selected\":this.selected});\n    }\n  });\n})();\n"]}